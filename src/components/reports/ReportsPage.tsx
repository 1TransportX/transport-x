
import React from 'react';
import { useQuery } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { FileText, Calendar, User } from 'lucide-react';
import { Button } from '@/components/ui/button';

const ReportsPage = () => {
  const { data: reports = [] } = useQuery({
    queryKey: ['reports'],
    queryFn: async () => {
      // Using type assertion temporarily until Supabase types are regenerated
      const { data, error } = await (supabase as any)
        .from('reports')
        .select(`
          *,
          profiles(first_name, last_name, email)
        `)
        .order('created_at', { ascending: false });
      
      if (error) throw error;
      return data;
    }
  });

  const viewReport = (reportData: any) => {
    // Create a new window to display the report
    const reportWindow = window.open('', '_blank');
    if (reportWindow) {
      reportWindow.document.write(`
        <html>
          <head>
            <title>Operational Report</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              .header { border-bottom: 2px solid #ccc; padding-bottom: 20px; margin-bottom: 30px; }
              .section { margin-bottom: 20px; }
              .metric { display: inline-block; margin: 10px 20px 10px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
              .metric-label { font-weight: bold; color: #666; }
              .metric-value { font-size: 24px; font-weight: bold; color: #333; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>Operational Report</h1>
              <p>Generated on: ${new Date(reportData.created_at).toLocaleString()}</p>
              <p>Generated by: ${reportData.profiles?.first_name} ${reportData.profiles?.last_name}</p>
            </div>
            
            <div class="section">
              <h2>Key Performance Indicators</h2>
              <div class="metric">
                <div class="metric-label">Total Employees</div>
                <div class="metric-value">${reportData.data.totalEmployees}</div>
              </div>
              <div class="metric">
                <div class="metric-label">Active Vehicles</div>
                <div class="metric-value">${reportData.data.activeVehicles}</div>
              </div>
              <div class="metric">
                <div class="metric-label">Inventory Items</div>
                <div class="metric-value">${reportData.data.totalInventoryItems}</div>
              </div>
              <div class="metric">
                <div class="metric-label">Inventory Value</div>
                <div class="metric-value">$${Math.round(reportData.data.totalInventoryValue).toLocaleString()}</div>
              </div>
              <div class="metric">
                <div class="metric-label">Low Stock Items</div>
                <div class="metric-value">${reportData.data.lowStockCount}</div>
              </div>
            </div>
          </body>
        </html>
      `);
      reportWindow.document.close();
    }
  };

  return (
    <div className="p-6 space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Generated Reports</h1>
          <p className="text-gray-600">View and manage operational reports</p>
        </div>
      </div>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center">
            <FileText className="h-5 w-5 mr-2" />
            Report History
          </CardTitle>
          <CardDescription>
            All generated operational reports
          </CardDescription>
        </CardHeader>
        <CardContent>
          {reports.length === 0 ? (
            <div className="text-center py-8 text-gray-500">
              No reports generated yet
            </div>
          ) : (
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Report Title</TableHead>
                  <TableHead>Generated By</TableHead>
                  <TableHead>Generated At</TableHead>
                  <TableHead>Actions</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {reports.map((report: any) => (
                  <TableRow key={report.id}>
                    <TableCell className="font-medium">
                      {report.title}
                    </TableCell>
                    <TableCell>
                      <div className="flex items-center">
                        <User className="h-4 w-4 mr-2 text-gray-400" />
                        {report.profiles?.first_name} {report.profiles?.last_name}
                      </div>
                    </TableCell>
                    <TableCell>
                      <div className="flex items-center">
                        <Calendar className="h-4 w-4 mr-2 text-gray-400" />
                        {new Date(report.created_at).toLocaleString()}
                      </div>
                    </TableCell>
                    <TableCell>
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={() => viewReport(report)}
                      >
                        View Report
                      </Button>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default ReportsPage;
